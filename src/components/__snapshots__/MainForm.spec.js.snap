// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MainFormFormik component MainFormFormik Snapshots should match stored FormContainer - empty case 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <WithFormik(MainForm)
    askee=""
    question=""
    status=""
    updating={Object {}}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "askee": "",
      "enableReinitialize": true,
      "handleSubmit": [Function],
      "initialValues": Object {
        "askee": "",
        "id": "",
        "question": "",
        "status": undefined,
        "updating": false,
      },
      "isInitialValid": false,
      "onSubmit": [Function],
      "question": "",
      "render": [Function],
      "status": "",
      "updating": Object {},
      "validate": undefined,
      "validateOnBlur": true,
      "validateOnChange": true,
      "validationSchema": [Function],
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "askee": "",
        "enableReinitialize": true,
        "handleSubmit": [Function],
        "initialValues": Object {
          "askee": "",
          "id": "",
          "question": "",
          "status": undefined,
          "updating": false,
        },
        "isInitialValid": false,
        "onSubmit": [Function],
        "question": "",
        "render": [Function],
        "status": "",
        "updating": Object {},
        "validate": undefined,
        "validateOnBlur": true,
        "validateOnChange": true,
        "validationSchema": [Function],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`MainFormFormik component MainFormFormik Snapshots should match stored FormContainer - update case 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <WithFormik(MainForm)
    updating={
      Object {
        "askee": "Test Askee",
        "id": "1234",
        "isUpdating": true,
        "question": "Test Question",
        "status": "rejected",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "enableReinitialize": true,
      "handleSubmit": [Function],
      "initialValues": Object {
        "askee": "Test Askee",
        "id": "1234",
        "question": "Test Question",
        "status": "rejected",
        "updating": true,
      },
      "isInitialValid": false,
      "onSubmit": [Function],
      "render": [Function],
      "updating": Object {
        "askee": "Test Askee",
        "id": "1234",
        "isUpdating": true,
        "question": "Test Question",
        "status": "rejected",
      },
      "validate": undefined,
      "validateOnBlur": true,
      "validateOnChange": true,
      "validationSchema": [Function],
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "enableReinitialize": true,
        "handleSubmit": [Function],
        "initialValues": Object {
          "askee": "Test Askee",
          "id": "1234",
          "question": "Test Question",
          "status": "rejected",
          "updating": true,
        },
        "isInitialValid": false,
        "onSubmit": [Function],
        "render": [Function],
        "updating": Object {
          "askee": "Test Askee",
          "id": "1234",
          "isUpdating": true,
          "question": "Test Question",
          "status": "rejected",
        },
        "validate": undefined,
        "validateOnBlur": true,
        "validateOnChange": true,
        "validationSchema": [Function],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
